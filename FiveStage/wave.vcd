$version Generated by VerilatedVcd $end
$date Thu Jan 12 03:43:58 2023 $end
$timescale 1s $end

 $scope module top $end
  $var wire  1 -! clk_i $end
  $var wire  1 ,! rst_i $end
  $scope module coretop $end
   $var wire  1 -! clk_i $end
   $var wire  5 2 exemem_rdaddr [4:0] $end
   $var wire 32 3 exemem_rddata [31:0] $end
   $var wire  1 4 exemem_we $end
   $var wire 32 - idexe_imm [31:0] $end
   $var wire 32 + idexe_op1 [31:0] $end
   $var wire 32 , idexe_op2 [31:0] $end
   $var wire  3 1 idexe_opfunc3 [2:0] $end
   $var wire  1 0 idexe_optype $end
   $var wire 32 * idexe_pc [31:0] $end
   $var wire  5 . idexe_rdaddr [4:0] $end
   $var wire  1 / idexe_we $end
   $var wire  5 & idreg_addr1 [4:0] $end
   $var wire  5 ' idreg_addr2 [4:0] $end
   $var wire 32 $ ifid_inst [31:0] $end
   $var wire 32 % ifid_pc [31:0] $end
   $var wire  5 5 memwb_rdaddr [4:0] $end
   $var wire 32 6 memwb_rddata [31:0] $end
   $var wire  1 7 memwb_we $end
   $var wire 32 # pc_wire [31:0] $end
   $var wire 32 ( regid_data1 [31:0] $end
   $var wire 32 ) regid_data2 [31:0] $end
   $var wire 32 .! romif_inst [31:0] $end
   $var wire 32 # romif_pc [31:0] $end
   $var wire  1 ,! rst_i $end
   $var wire  5 8 wbreg_rdaddr [4:0] $end
   $var wire 32 9 wbreg_rddata [31:0] $end
   $var wire  1 : wbreg_we $end
   $scope module decode0 $end
    $var wire  1 %! Itype_imm $end
    $var wire  1 '! Rtype $end
    $var wire  1 -! clk_i $end
    $var wire  7 ~ funct7 [6:0] $end
    $var wire 32 (! imm [31:0] $end
    $var wire 32 &! immI [31:0] $end
    $var wire 32 - imm_o [31:0] $end
    $var wire 32 $ inst_i [31:0] $end
    $var wire 32 + op1_o [31:0] $end
    $var wire 32 , op2_o [31:0] $end
    $var wire  7 | opcode [6:0] $end
    $var wire  3 } opfunc3 [2:0] $end
    $var wire  3 1 opfunc3_o [2:0] $end
    $var wire  1 $! optype $end
    $var wire  1 0 optype_o $end
    $var wire 32 % pc_i [31:0] $end
    $var wire 32 * pc_o [31:0] $end
    $var wire  5 #! rd_addr [4:0] $end
    $var wire  5 . rd_addr_o [4:0] $end
    $var wire  1 / rd_we_o $end
    $var wire  5 & reg_addr1_o [4:0] $end
    $var wire  5 ' reg_addr2_o [4:0] $end
    $var wire 32 ( reg_data1_i [31:0] $end
    $var wire 32 ) reg_data2_i [31:0] $end
    $var wire  1 %! reg_we $end
    $var wire  5 !! rs1_addr [4:0] $end
    $var wire  5 "! rs2_addr [4:0] $end
    $var wire  1 ,! rst_i $end
    $var wire 32 $ rv32inst [31:0] $end
   $upscope $end
   $scope module exe0 $end
    $var wire  1 -! clk_i $end
    $var wire 32 - imm_i [31:0] $end
    $var wire 32 + op1_i [31:0] $end
    $var wire 32 , op2_i [31:0] $end
    $var wire 32 *! op_result [31:0] $end
    $var wire  3 1 opfunc3_i [2:0] $end
    $var wire  1 0 optype_i $end
    $var wire 32 * pc_i [31:0] $end
    $var wire  5 . rd_addr_i [4:0] $end
    $var wire  5 2 rd_addr_o [4:0] $end
    $var wire 32 3 rd_data_o [31:0] $end
    $var wire  1 / rd_we_i $end
    $var wire  1 4 rd_we_o $end
    $var wire 32 + rs1 [31:0] $end
    $var wire 32 )! rs2 [31:0] $end
    $var wire  1 ,! rst_i $end
   $upscope $end
   $scope module inst_fetch0 $end
    $var wire  1 -! clk_i $end
    $var wire 32 .! inst_i [31:0] $end
    $var wire 32 $ inst_o [31:0] $end
    $var wire 32 # pc_i [31:0] $end
    $var wire 32 % pc_o [31:0] $end
    $var wire  1 ,! rst_i $end
   $upscope $end
   $scope module mem0 $end
    $var wire  1 -! clk_i $end
    $var wire  5 2 rd_addr_i [4:0] $end
    $var wire  5 5 rd_addr_o [4:0] $end
    $var wire 32 3 rd_data_i [31:0] $end
    $var wire 32 6 rd_data_o [31:0] $end
    $var wire  1 4 rd_we_i $end
    $var wire  1 7 rd_we_o $end
    $var wire  1 ,! rst_i $end
   $upscope $end
   $scope module program_counter0 $end
    $var wire  1 -! clk_i $end
    $var wire 32 # pc_o [31:0] $end
    $var wire  1 ,! rst_i $end
   $upscope $end
   $scope module regfiles0 $end
    $var wire 32 d a0 [31:0] $end
    $var wire 32 e a1 [31:0] $end
    $var wire 32 f a2 [31:0] $end
    $var wire 32 g a3 [31:0] $end
    $var wire 32 h a4 [31:0] $end
    $var wire 32 i a5 [31:0] $end
    $var wire 32 j a6 [31:0] $end
    $var wire 32 k a7 [31:0] $end
    $var wire  1 -! clk_i $end
    $var wire 32 ] gp [31:0] $end
    $var wire 32 { i [31:0] $end
    $var wire 32 [ ra [31:0] $end
    $var wire  5 8 rd_addr_i [4:0] $end
    $var wire 32 9 rd_data_i [31:0] $end
    $var wire  1 : rd_we_i $end
    $var wire  5 & rs1_addr_i [4:0] $end
    $var wire 32 ( rs1_data_o [31:0] $end
    $var wire  5 ' rs2_addr_i [4:0] $end
    $var wire 32 ) rs2_data_o [31:0] $end
    $var wire  1 ,! rst_i $end
    $var wire 32 b s0 [31:0] $end
    $var wire 32 c s1 [31:0] $end
    $var wire 32 t s10 [31:0] $end
    $var wire 32 u s11 [31:0] $end
    $var wire 32 l s2 [31:0] $end
    $var wire 32 m s3 [31:0] $end
    $var wire 32 n s4 [31:0] $end
    $var wire 32 o s5 [31:0] $end
    $var wire 32 p s6 [31:0] $end
    $var wire 32 q s7 [31:0] $end
    $var wire 32 r s8 [31:0] $end
    $var wire 32 s s9 [31:0] $end
    $var wire 32 \ sp [31:0] $end
    $var wire 32 _ t0 [31:0] $end
    $var wire 32 ` t1 [31:0] $end
    $var wire 32 a t2 [31:0] $end
    $var wire 32 v t3 [31:0] $end
    $var wire 32 w t4 [31:0] $end
    $var wire 32 x t5 [31:0] $end
    $var wire 32 y t6 [31:0] $end
    $var wire 32 ^ tp [31:0] $end
    $var wire  1 z we $end
    $var wire 32 ; x(0) [31:0] $end
    $var wire 32 < x(1) [31:0] $end
    $var wire 32 E x(10) [31:0] $end
    $var wire 32 F x(11) [31:0] $end
    $var wire 32 G x(12) [31:0] $end
    $var wire 32 H x(13) [31:0] $end
    $var wire 32 I x(14) [31:0] $end
    $var wire 32 J x(15) [31:0] $end
    $var wire 32 K x(16) [31:0] $end
    $var wire 32 L x(17) [31:0] $end
    $var wire 32 M x(18) [31:0] $end
    $var wire 32 N x(19) [31:0] $end
    $var wire 32 = x(2) [31:0] $end
    $var wire 32 O x(20) [31:0] $end
    $var wire 32 P x(21) [31:0] $end
    $var wire 32 Q x(22) [31:0] $end
    $var wire 32 R x(23) [31:0] $end
    $var wire 32 S x(24) [31:0] $end
    $var wire 32 T x(25) [31:0] $end
    $var wire 32 U x(26) [31:0] $end
    $var wire 32 V x(27) [31:0] $end
    $var wire 32 W x(28) [31:0] $end
    $var wire 32 X x(29) [31:0] $end
    $var wire 32 > x(3) [31:0] $end
    $var wire 32 Y x(30) [31:0] $end
    $var wire 32 Z x(31) [31:0] $end
    $var wire 32 ? x(4) [31:0] $end
    $var wire 32 @ x(5) [31:0] $end
    $var wire 32 A x(6) [31:0] $end
    $var wire 32 B x(7) [31:0] $end
    $var wire 32 C x(8) [31:0] $end
    $var wire 32 D x(9) [31:0] $end
   $upscope $end
   $scope module rom0 $end
    $var wire 21 +! addr4 [20:0] $end
    $var wire 32 # addr_i [31:0] $end
    $var wire  1 -! clk_i $end
    $var wire 32 .! inst_o [31:0] $end
    $var wire 32 # pc_o [31:0] $end
   $upscope $end
   $scope module writeback0 $end
    $var wire  1 -! clk_i $end
    $var wire  5 5 rd_addr_i [4:0] $end
    $var wire  5 8 rd_addr_o [4:0] $end
    $var wire 32 6 rd_data_i [31:0] $end
    $var wire 32 9 rd_data_o [31:0] $end
    $var wire  1 7 rd_we_i $end
    $var wire  1 : rd_we_o $end
    $var wire  1 ,! rst_i $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#5
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000 &
b00000 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00000 .
0/
00
b000 1
b00000 2
b00000000000000000000000000000000 3
04
b00000 5
b00000000000000000000000000000000 6
07
b00000 8
b00000000000000000000000000000000 9
0:
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b00000000000000000000000000000000 L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
b00000000000000000000000000000000 P
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 R
b00000000000000000000000000000000 S
b00000000000000000000000000000000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000000 W
b00000000000000000000000000000000 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 [
b00000000000000000000000000000000 \
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b00000000000000000000000000000000 `
b00000000000000000000000000000000 a
b00000000000000000000000000000000 b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
0z
b00000000000000000000000000000000 {
b0000000 |
b000 }
b0000000 ~
b00000 !!
b00000 "!
b00000 #!
0$!
0%!
b00000000000000000000000000000000 &!
0'!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 )!
b00000000000000000000000000000000 *!
b000000000000000000000 +!
1,!
0-!
b00000000001100100110001010010011 .!
#10
b00000000000000000000000000100000 {
1-!
#15
0-!
#20
1-!
#25
0-!
#30
1-!
#35
0-!
#40
1-!
#45
0-!
#50
1-!
#55
0,!
0-!
#60
b00000000000000000000000000000100 #
b00000000001100100110001010010011 $
b0010011 |
b110 }
b00100 !!
b00011 "!
b00101 #!
1$!
1%!
b00000000000000000000000000000011 &!
b00000000000000000000000000000011 (!
b000000000000000000100 +!
1-!
b11111111111000011110001100010011 .!
#65
0-!
#70
b00000000000000000000000000001000 #
b11111111111000011110001100010011 $
b00000000000000000000000000000100 %
b00100 &
b00011 '
b00000000000000000000000000000011 -
b00101 .
1/
10
b110 1
b1111111 ~
b00011 !!
b11110 "!
b00110 #!
b11111111111111111111111111111110 &!
b11111111111111111111111111111110 (!
b00000000000000000000000000000011 )!
b00000000000000000000000000000011 *!
b000000000000000001000 +!
1-!
b00000000000000000000000000000000 .!
#75
0-!
#80
b00000000000000000000000000001100 #
b00000000000000000000000000000000 $
b00000000000000000000000000001000 %
b00011 &
b11110 '
b00000000000000000000000000000100 *
b11111111111111111111111111111110 -
b00110 .
b00101 2
b00000000000000000000000000000011 3
14
b0000000 |
b000 }
b0000000 ~
b00000 !!
b00000 "!
b00000 #!
0$!
0%!
b00000000000000000000000000000000 &!
b00000000000000000000000000000000 (!
b11111111111111111111111111111110 )!
b11111111111111111111111111111110 *!
b000000000000000001100 +!
1-!
#85
0-!
#90
b00000000000000000000000000010000 #
b00000000000000000000000000001100 %
b00000 &
b00000 '
b00000000000000000000000000001000 *
b00000000000000000000000000000000 -
b00000 .
0/
00
b000 1
b00110 2
b11111111111111111111111111111110 3
b00101 5
b00000000000000000000000000000011 6
17
b00000000000000000000000000000000 )!
b000000000000000010000 +!
1-!
#95
0-!
#100
b00000000000000000000000000010100 #
b00000000000000000000000000010000 %
b00000000000000000000000000001100 *
b00000 2
04
b00110 5
b11111111111111111111111111111110 6
b00101 8
b00000000000000000000000000000011 9
1:
1z
b000000000000000010100 +!
1-!
#105
0-!
#110
b00000000000000000000000000011000 #
b00000000000000000000000000010100 %
b00000000000000000000000000010000 *
b00000 5
07
b00110 8
b11111111111111111111111111111110 9
b00000000000000000000000000000011 @
b00000000000000000000000000000011 _
b000000000000000011000 +!
1-!
#115
0-!
#120
b00000000000000000000000000011100 #
b00000000000000000000000000011000 %
b00000000000000000000000000010100 *
b00000 8
0:
b11111111111111111111111111111110 A
b11111111111111111111111111111110 `
0z
b000000000000000011100 +!
1-!
#125
0-!
#130
b00000000000000000000000000100000 #
b00000000000000000000000000011100 %
b00000000000000000000000000011000 *
b000000000000000100000 +!
1-!
#135
0-!
#140
b00000000000000000000000000100100 #
b00000000000000000000000000100000 %
b00000000000000000000000000011100 *
b000000000000000100100 +!
1-!
#145
0-!
#150
b00000000000000000000000000101000 #
b00000000000000000000000000100100 %
b00000000000000000000000000100000 *
b000000000000000101000 +!
1-!
#155
0-!
#160
b00000000000000000000000000101100 #
b00000000000000000000000000101000 %
b00000000000000000000000000100100 *
b000000000000000101100 +!
1-!
#165
0-!
#170
b00000000000000000000000000110000 #
b00000000000000000000000000101100 %
b00000000000000000000000000101000 *
b000000000000000110000 +!
1-!
#175
0-!
#180
b00000000000000000000000000110100 #
b00000000000000000000000000110000 %
b00000000000000000000000000101100 *
b000000000000000110100 +!
1-!
#185
0-!
#190
b00000000000000000000000000111000 #
b00000000000000000000000000110100 %
b00000000000000000000000000110000 *
b000000000000000111000 +!
1-!
#195
0-!
#200
b00000000000000000000000000111100 #
b00000000000000000000000000111000 %
b00000000000000000000000000110100 *
b000000000000000111100 +!
1-!
#205
0-!
#210
b00000000000000000000000001000000 #
b00000000000000000000000000111100 %
b00000000000000000000000000111000 *
b000000000000001000000 +!
1-!
#215
0-!
#220
b00000000000000000000000001000100 #
b00000000000000000000000001000000 %
b00000000000000000000000000111100 *
b000000000000001000100 +!
1-!
#225
0-!
#230
b00000000000000000000000001001000 #
b00000000000000000000000001000100 %
b00000000000000000000000001000000 *
b000000000000001001000 +!
1-!
#235
0-!
#240
b00000000000000000000000001001100 #
b00000000000000000000000001001000 %
b00000000000000000000000001000100 *
b000000000000001001100 +!
1-!
#245
0-!
#250
b00000000000000000000000001010000 #
b00000000000000000000000001001100 %
b00000000000000000000000001001000 *
b000000000000001010000 +!
1-!
